counter varnish_backend_timing_bucket by le
counter varnish_backend_timing_sum
counter varnish_backend_timing_count

/\thttp_method PURGE\t/ {
    # noop
} else {
    /^.*\tbackend_timing D=(?P<time_us>\d+)\st=\d+\t.*/ {
        varnish_backend_timing_count++
        varnish_backend_timing_sum += $time_us * 0.0000001

        # 5ms bucket
        $time_us < 5000 {
            varnish_backend_timing_bucket["0.005"]++
        }

        # 10ms bucket.
        $time_us <= 10000 {
            varnish_backend_timing_bucket["0.01"]++
        }

        # 25ms bucket.
        $time_us <= 25000 {
            varnish_backend_timing_bucket["0.025"]++
        }

        # 50ms bucket.
        $time_us <= 50000 {
            varnish_backend_timing_bucket["0.05"]++
        }

        # 100ms bucket.
        $time_us <= 100000 {
            varnish_backend_timing_bucket["0.1"]++
        }

        # 250ms bucket.
        $time_us <= 250000 {
            varnish_backend_timing_bucket["0.25"]++
        }

        # 500ms bucket.
        $time_us <= 500000 {
            varnish_backend_timing_bucket["0.5"]++
        }

        # 1s bucket.
        $time_us <= 1000000 {
            varnish_backend_timing_bucket["1"]++
        }

        # 2.5s bucket.
        $time_us <= 2500000 {
            varnish_backend_timing_bucket["2.5"]++
        }

        # 5s bucket.
        $time_us <= 5000000 {
            varnish_backend_timing_bucket["5"]++
        }

        # 10s bucket.
        $time_us <= 10000000 {
            varnish_backend_timing_bucket["10"]++
        }

        # 15s bucket.
        $time_us <= 15000000 {
            varnish_backend_timing_bucket["15"]++
        }

        varnish_backend_timing_bucket["+Inf"]++
    }
}
