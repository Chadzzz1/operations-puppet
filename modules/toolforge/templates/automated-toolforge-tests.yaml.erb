# this file is managed by puppet:
# modules/toolforge/templates/tests.yaml.erb
---
- envvars:
  - PROJECT: <%= @labsproject %>
    TOOLNAME: automated-toolforge-tests
    SUDO: sudo -niu <%= @labsproject %>.automated-toolforge-tests
    JOB_NAME: grid-test-script
    JOB_SCRIPT: ./grid-test-script.sh
    SCRIPT_FULLPATH: /data/project/automated-toolforge-tests/grid-test-script.sh
    VERIFY_TIMEOUT: "30"
<% if @labsproject == 'toolsbeta' -%>
    # toolsbeta using special cloudstore VM NFS server
    NFS_PATH: /mnt/nfs/nfs-01-toolsbeta-project/automated-toolforge-tests
<% end -%>
<% if @labsproject == 'tools' -%>
    NFS_PATH: /mnt/nfs/labstore-secondary-tools-project/automated-toolforge-tests
<% end -%>
<% @envvars.each do |key, value| -%>
    <%= key %>: <%= value %>
<% end -%>
---
- name: verify the grid knows about this tool account
  tests:
    - cmd: $SUDO pwd | grep -q ${NFS_PATH}
      retcode: 0
      stderr: ""

- name: setup jsub env for later tests
  tests:
    # cleanup
    - cmd: $SUDO rm -fv ${JOB_SCRIPT} ${JOB_NAME}.err ${JOB_NAME}.out $HASH_FILE
    # create script reused by later tests
    - cmd: |
           cat << EOF > ${SCRIPT_FULLPATH}
           #!/bin/sh
           # autogenerated file by the toolforge test suite
           cat /etc/debian_version
           EOF
      stdout: ""
      retcode: 0
      stderr: ""
    # ensure proper permissions
    - cmd: chown ${PROJECT}.${TOOLNAME}:${PROJECT}.${TOOLNAME} $SCRIPT_FULLPATH
      retcode: 0
      stderr: ""
    - cmd: chmod ug+x $SCRIPT_FULLPATH
      retcode: 0
      stderr: ""

- name: run a basic jsub job in the BUSTER grid reading /etc/debian_version of the exec node
  tests:
    # another cleanup
    - cmd: $SUDO rm -fv ${JOB_NAME}.err ${JOB_NAME}.out
    # run the job
    - cmd: $SUDO jsub -release buster ${JOB_SCRIPT} | grep ${JOB_NAME} | grep "has been submitted"
      retcode: 0
      stderr: ""
    # verify: wait for the grid to schedule & run the job
    - cmd: timeout $VERIFY_TIMEOUT bash -c -- '
           while ! $SUDO grep ^10. ${JOB_NAME}.out
           ; do sleep 0.5 ; done'
      retcode: 0
      stderr: ""
    # we should have no error messages
    - cmd: $SUDO cat ${JOB_NAME}.err | wc -l
      retcode: 0
      stderr: ""
      stdout: "0"

- name: run a basic jsub job in the STRETCH grid reading /etc/debian_version of the exec node
  tests:
    # another cleanup
    - cmd: $SUDO rm -fv ${JOB_NAME}.err ${JOB_NAME}.out
    # run the job
    - cmd: $SUDO jsub -release stretch ${JOB_SCRIPT} | grep ${JOB_NAME} | grep "has been submitted"
      retcode: 0
      stderr: ""
    # verify: wait for the grid to schedule & run the job
    - cmd: timeout $VERIFY_TIMEOUT bash -c -- '
           while ! $SUDO grep ^9. ${JOB_NAME}.out
           ; do sleep 0.5 ; done'
      retcode: 0
      stderr: ""
    # we should have no error messages
    - cmd: $SUDO cat ${JOB_NAME}.err | wc -l
      retcode: 0
      stderr: ""
      stdout: "0"
