address:
    socket_address:
        port_value: <%= @name %>
<%- if @listen_ipv6 -%>
        address: '::'
        ipv4_compat: true
<%- else -%>
        address: 0.0.0.0
<%- end -%>
listener_filters:
- name: "envoy.filters.listener.tls_inspector"
  typed_config: {}
tcp_fast_open_queue_length: <%= @fast_open_queue %>
filter_chains:
<%- @upstreams.each do |upstream| -%>
<%- if upstream['cert_path'] != :undef -%>
- filter_chain_match:
    server_names: <%= upstream['server_names'] %>
  transport_socket:
    name: envoy.transport_sockets.tls
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
      common_tls_context:
        tls_certificates:
        - certificate_chain: { filename: "<%= upstream['cert_path'] %>" }
          private_key: { filename: "<%= upstream['key_path'] %>" }
  filters:
  - name: envoy.http_connection_manager
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
<%- if @websockets -%>
      upgrade_configs:
      - upgrade_type: "websocket"
<%- end -%>
<%- if @use_remote_address -%>
      use_remote_address: true
      skip_xff_append: false
<%- end -%>
<%- if @capitalize_headers -%>
      http_protocol_options:
        header_key_format:
          proper_case_words: {}
<%- end -%>
      stat_prefix: ingress_http
<%- if @access_log -%>
      access_log:
      - name: envoy.file_access_log
        filter:
          status_code_filter:
            comparison:
              op: "GE"
              value:
                default_value: 500
                runtime_key: <%= upstream['cert_name'] %>_min_log_code
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: "/var/log/envoy/<%= upstream['cert_name'] %>.log"
<%- end -%>
      route_config:
<%- unless @response_headers_to_add.empty? -%>
        response_headers_to_add:
  <%- @response_headers_to_add.each_pair do |header, value| -%>
        - header: {key: <%= header %>, value: <%= value %>}
  <%- end -%>
<%- end -%>
        virtual_hosts:
        - name: default
          domains: ["*"]
          routes:
          - match: { prefix: "/" }
            route:
              cluster: local_port_<%= upstream['upstream_port'] %>
              timeout: <%= @upstream_response_timeout %>s
              <%- if @retry_policy != nil -%>
              retry_policy:
                <%- @retry_policy.each do |k, v| -%>
                <%= k %>: <%= scope.call_function('to_json',[v]) %>
                <%- end -%>
              <%- end -%>
      http_filters: [{name: envoy.filters.http.router, typed_config: {}}]
      server_header_transformation: APPEND_IF_ABSENT
<%- end -%>
<%- end -%>
<%- if @global_cert_path != nil && @global_key_path != nil -%>
# Non-SNI support
- transport_socket:
    name: envoy.transport_sockets.tls
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
      common_tls_context:
        tls_certificates:
        - certificate_chain: { filename: "<%= @global_cert_path %>" }
          private_key: { filename: "<%= @global_key_path %>" }
  filters:
  - name: envoy.http_connection_manager
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
<%- if @websockets -%>
      upgrade_configs:
      - upgrade_type: "websocket"
<%- end -%>
      stat_prefix: ingress_http
<%- if @use_remote_address -%>
      use_remote_address: true
      skip_xff_append: false
<%- end -%>
<%- if @access_log -%>
      access_log:
      - name: envoy.file_access_log
        filter:
          status_code_filter:
            comparison:
              op: "GE"
              value:
                default_value: 500
                runtime_key: global_tls_min_log_code
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: "/var/log/envoy/global_tls.log"
<%- end -%>
      route_config:
<%- unless @response_headers_to_add.empty? -%>
        response_headers_to_add:
  <%- @response_headers_to_add.each_pair do |header, value| -%>
        - header: {key: <%= header %>, value: <%= value %>}
  <%- end -%>
<%- end -%>
        virtual_hosts:
        <%- @upstreams.each do |upstream| -%>
        - name: non_sni_port_<%= upstream['upstream_port'] %>
          domains: <%= upstream['server_names'] %>
          routes:
          - match: { prefix: "/" }
            route:
              cluster: local_port_<%= upstream['upstream_port'] %>
              timeout: <%= @upstream_response_timeout %>s
              <%- if @retry_policy != nil -%>
              retry_policy:
                <%- @retry_policy.each do |k, v| -%>
                <%= k %>: <%= scope.call_function('to_json',[v]) %>
                <%- end -%>
              <%- end -%>
        <%- end -%>
      http_filters: [{name: envoy.filters.http.router, typed_config: {}}]
      http_protocol_options:
        accept_http_10: true
<%- if @capitalize_headers -%>
        header_key_format:
          proper_case_words: {}
<%- end -%>
      server_header_transformation: APPEND_IF_ABSENT
<%- end -%>
