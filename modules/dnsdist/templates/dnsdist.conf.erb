-- This file is managed by Puppet [see dnsdist/dnsdist.conf.erb].

-- dnsdist by default restricts queries from private IPs and other local addresses
addACL('0.0.0.0/0')
addACL('::/0')

<% if @enable_console -%>
-- control socket access (default port is 5199)
controlSocket('127.0.0.1')
setKey('<%= @console_key %>')
<% end -%>

<% if @enable_webserver -%>
-- web server and API access (primarily used for Prometheus)
webserver('<%= @webserver_config['host'] %>:<%= @webserver_config['port'] %>', '<%= @webserver_config['password'] %>', '<%= @webserver_config['api_key'] %>')
<% end -%>

-- limit the number of queries per second from an IP (default: /32 for IPv4, /64 for IPv6)
-- note that we don't use DelayAction() as that is UDP-only
addAction(MaxQPSIPRule(<%= @qps_max %>, 32, 64), DropAction())

<% if @enable_packetcache -%>
-- dnsdist's packet cache configuration
pc = newPacketCache(<%= @packetcache_max %>)
getPool(""):setCache(pc)
<% end -%>

setRingBuffersSize(<%= @ringbuffer_max %>)

-- TLS configuration options for DoH and DoT
tlsOptions = {
  minTLSVersion='<%= @tls_config['min_tls_version'] %>',
<% if @tls_config.has_key?('ciphers_tls13') -%>
  ciphersTLS13='<%= @tls_config['ciphers_tls13'].join(':') %>',
<% end -%>
<% if @tls_config.has_key?('ciphers') -%>
  ciphers='<%= @tls_config['ciphers'].join(':') %>',
<% end -%>
}

-- enable DoH (default port is 443)
addDOHLocal('0.0.0.0', '<%= @tls_config['cert_chain_path'] %>', '<%= @tls_config['cert_privkey_path'] %>', '<%= @doh_base_url %>', tlsOptions)
addDOHLocal('[::]', '<%= @tls_config['cert_chain_path'] %>', '<%= @tls_config['cert_privkey_path'] %>', '<%= @doh_base_url %>', tlsOptions)

-- enable DoT (default port is 853)
-- the default TLS library (provider) for DoT in version 1.4.0 is GnuTLS, so set OpenSSL explicitly
tlsOptions['provider'] = 'openssl'
addTLSLocal('0.0.0.0', '<%= @tls_config['cert_chain_path'] %>', '<%= @tls_config['cert_privkey_path'] %>', tlsOptions)
addTLSLocal('[::]', '<%= @tls_config['cert_chain_path'] %>', '<%= @tls_config['cert_privkey_path'] %>', tlsOptions)

newServer({address='<%= @resolver['host'] %>:<%= @resolver['port'] %>', name='<%= @resolver['name'] %>',
           useClientSubnet=<%= @enable_ecs ? true : false %>})
