{{/* Translate a request-patterns object to VCL **/}}
{{- define "vcl_from_pattern" -}}
{{- if .method -}}
req.method == "{{ .method }}"
{{- else if .url_path -}}
req.url ~ "{{ .url_path }}"
{{- else if .header -}}
{{if .header_value }}req.http.{{ .header }} ~ "{{ .header_value }}"{{ else }}!req.http.{{ .header }}{{ end }}
{{- else if .query_parameter -}}
req.url ~ "[\?\&]{{ .query_parameter }}={{ .query_parameter_value }}"
{{- end -}}
{{ end -}}
{{/* Given a request-ipblocks object, generate the VCL fragment **/}}
{{- define "vcl_from_ipblock" -}}
{{- $split := split . "/" -}}
{{- if eq "abuse" (index $split 0) -}}std.ip(req.http.X-Client-IP, "192.0.2.1") ~ {{ index $split 1 }}{{- else -}}req.http.X-Public-Cloud == "{{ index $split 1 }}"{{- end -}}
{{- end -}}
{{/* Generate a vsthrottle.is_denied directive from the action object **/}}
{{- define "vcl_from_throttle" -}}
{{- $throttle := index . "action" -}}
vsthrottle.is_denied("global:{{ index . "label" }}{{ if $throttle.throttle_per_ip }}:"  + req.http.X-Client-IP{{ else }}"{{ end }}, {{ $throttle.throttle_requests }}, {{ $throttle.throttle_interval }}s, {{ $throttle.throttle_duration }}s)
{{- end -}}
{{/* Translate a token from the expression to VCL. **/}}
{{- define "vcl_from_expr" -}}
{{- $split := split . "@" -}}{{- $id := index $split 0 -}}
{{- if eq $id "ipblock" -}}
    {{- $ipblock := (index $split 1) }}{{- template "vcl_from_ipblock" $ipblock -}}
{{- else if eq $id "pattern" -}}
    {{- $pattern := printf "/request-patterns/%s" (index $split 1) | getv | json }} {{ template "vcl_from_pattern" $pattern -}}
{{- else if eq . "AND" -}}&&
{{- else if eq . "OR" -}}||
{{- else -}}{{/* anything that is not interpreted as a token is copied as-is **/}}{{ . -}}
{{- end -}}
{{ end -}}

// Actions generated from etcd rules, if any.
// Edit using confctl. See instructions for disabling them below.
{{- $site := "<%= @site %>"  }}{{ $cluster := "cache-<%= @cache_cluster %>" -}}
{{- range gets (printf "/request-actions/%s/*" $cluster) }}
{{- $action := json .Value   }}{{- $name := base .Key }}
{{- $has_site := (not $action.sites) -}}{{ range $action.sites }}{{ if eq . $site }}{{ $has_site = true }}{{ end }}{{ end -}}
{{- if and $action.enabled $action.expression $has_site }}{{/* Only actions that are enabled and include an ipblock or a pattern are actually effective **/}}
// FILTER: {{ $name }}
// {{ $action.comment }}
// This filter is generated from data in etcd. If you want to disable it, run the following command:
// confctl --object-type request-actions select 'name={{ $name }},cluster={{ $cluster }}' set/enabled=false
if ({{ range split $action.expression " " }}{{ template "vcl_from_expr" . }} {{ end }}{{ if $action.do_throttle }} && {{ template "vcl_from_throttle" (map "label" $name "action" $action)}}{{- end -}}) {
        return (synth({{$action.resp_status}}, "{{$action.resp_reason}}"));
}
{{ end -}}
{{ end -}}
