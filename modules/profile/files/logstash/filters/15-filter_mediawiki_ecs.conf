# SPDX-License-Identifier: Apache-2.0
# Filters for MediaWiki to ECS formatting

filter {
  if [program] == "mediawiki" or [program] == "php7.4-fpm" {
    # TODO: remove clone step after 2023-06-10
    if [channel] == "error" or [channel] == "exception" {
      clone {
        clones => ["mediawiki-ecs"]
        add_field => {
          "[ecs][version]"         => "1.11.0"
          "[service][type]"        => "mediawiki"
        }
        id => "filter/mediawiki_ecs/clone"
      }
    }

    if [type] == "mediawiki-ecs" {
      # Extract file path and line number from exception.file
      grok {
        match => {
          "[exception][file]" => [
            "%{GREEDYDATA:[log][origin][file][name]}:%{NUMBER:[log][origin][file][line]}"
          ]
        }
        id => "filter/mediawiki_ecs/grok"
      }

      # ensure labels.normalized_message is truncated to 256 characters
      ruby {
        code => 'event.set("[labels][normalized_message]", event.get("normalized_message")[0..255]) unless event.get("normalized_message").nil?'
      }

      # Main ECS mutation
      # 1. Rebuilds url.full from server and url fields.  Assumes https scheme.
      # 2. MediaWiki generates the @timestamp field.  Remove timestamp field injected by rsyslog.
      mutate {
        rename => {
          "server"                       => "[_server]"
          "url"                          => "[_url]"
          "msg"                          => "message"
          "host"                         => "[host][name]"
          "program"                      => "[service][type]"
          "[exception][class]"           => "[error][type]"
          "[exception][message]"         => "[error][message]"
          "[exception][trace]"           => "[error][stack_trace]"
          "[exception][previous][trace]" => "[error][stack][previous_trace]"
          "referrer"                     => "[http][request][referrer]"
          "http_method"                  => "[http][request][method]"
          "mwversion"                    => "[service][version]"
          "shard"                        => "[labels][shard]"
          "wiki"                         => "[labels][wiki]"
          "servergroup"                  => "[labels][servergroup]"
          "phpversion"                   => "[labels][phpversion]"
          "reqId"                        => "[trace][id]"
          "caught_by"                    => "[labels][caught_by]"
          "channel"                      => "[labels][channel]"
        }
        replace => {
          "[@metadata][partition]" => "mediawiki"
        }
        add_field => {
          "[url][full]"          => "https://%{_server}%{_url}"
        }
        remove_field => [ "timestamp", "_server", "_url" ]
        id => "filter/mediawiki_ecs/mutate"
      }
    }
  }
}
