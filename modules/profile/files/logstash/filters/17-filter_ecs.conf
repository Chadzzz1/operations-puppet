# SPDX-License-Identifier: Apache-2.0
# Early-stage ECS filter for entries that enter the pipeline ECS-compliant
filter {
  if [ecs][version] == "1.7.0" or [ecs.version] == "1.7.0" {
    # Expand dot-delimited keys to nested objects
    ruby {
      path => "/etc/logstash/filter_scripts/dot_expander.rb"
      id => "filter/ruby/dot_expander"
    }

    ruby {
      path => "/etc/logstash/filter_scripts/normalize_level.rb"
      id => "filter/ruby/normalize_level"
    }

    # Parse timestamp field if available
    if [timestamp] {
      date {
        match => [ "timestamp", "ISO8601", "yyyy-MM-dd_HH:mm:ss.SSSSS", "dd/MMM/yyyy:HH:mm:ss Z", "yyyy/MM/dd HH:mm:ss" ]
        target => "@timestamp"
        id => "filter/date/timestamp"
      }
    }

    # If software does not provide service.type, get it from rsyslog
    if ![service][type] {
      if [rsyslog] {
        mutate {
          replace => { "[service][type]" => "%{[rsyslog][programname]}" }
          id => "filter/ecs/mutate/set_service_type_from_rsyslog_programname"
        }
      }
    }

    # If software does not provide host.name, get it from rsyslog
    if ![host][name] {
      if [rsyslog] {
        # rename applies first to avoid type mismatch
        mutate {
          rename => { "host" => "[host][name]"}
          replace => { "[host][name]" => "%{[rsyslog][hostname]}" }
          id => "filter/ecs/mutate/set_host_name_from_rsyslog_hostname"
        }
      }
    }

    # set default rotation frequency for ECS indexes not yet modified.
    if [@metadata][output] == "logstash" {
      mutate {
        replace => {
          "[@metadata][output]" => "ecs"
          "[@metadata][rotation_frequency]" => "weekly"
        }
      }
    }

    # 1. Most filters downstream manipulate the event based on
    #    the type field which is often set by the input filter.
    #    The type field and the majority of downstream filters are
    #    invalid for ECS-formatted events.
    # 2. Copy ecs version to template_version
    mutate {
      remove_field => [ "type" ]
      copy => { "[ecs][version]" => "[@metadata][template_version]" }
    }
  }
}
