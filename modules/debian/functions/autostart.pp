# @summary create a function to prevent services from autostarting on installation
# @param service the name of the service
# @param enabled boolean indicating if the service autostart should be enabled.
function debian::autostart (
    String  $service,
    Boolean $enabled,
) {
    # For Debian Bullseye and later we use the systemd-native preset feature.
    # This doesn't work in Buster and older, so on those distros we fall back
    # to update-rc.d


    # Store preset files on /run to make them volatile; on system startup
    # we don't want them to be active (only with the running systemd, i.e.
    # when they were regenerated by Puppet
    if debian::codename::ge('bullseye') {
        wmflib::dir::mkdir_p('/run/wikimedia/systemd-preset', {
            owner   => 'root',
            group   => 'root',
            mode    => '0550',
        })

        ensure_resource('file', '/etc/systemd/system-preset', {
            ensure => 'link',
            owner  => 'root',
            group  => 'root',
            mode   => '0444',
            target => '/run/wikimedia/systemd-preset',
        })

        ensure_resource('file', "/run/wikimedia/system-preset/${service}.preset", {
            ensure  => stdlib::ensure(!$enabled, 'file'),
            owner   => 'root',
            group   => 'root',
            mode    => '0444',
            content => "disable ${service}.service",
        })

    } else {
        include debian::policy_rc_d
        file { "${debian::policy_rc_d::policy_rd_d_dir}/${service}":
            ensure => stdlib::ensure(!$enabled, 'file'),
            owner  => 'root',
            group  => 'root',
            mode   => '0444',
        }
    }
}
