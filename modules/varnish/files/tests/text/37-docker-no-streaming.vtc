varnishtest "docker issues with streaming T270270"

server s1 {
    rxreq
    expect req.url == "/notjson"
    txresp -hdr "Content-Type: application/vnd.docker.distribution.manifest.v1+prettyjws" -bodylen 2642

    rxreq
    expect req.url == "/json"
    txresp -hdr "Content-Type: application/vnd.docker.distribution.manifest.v2+json" -bodylen 2620
} -start

varnish v1 -arg "-p vcl_path=${vcl_path} -p vcc_err_unref=false -p vcc_allow_inline_c=true -p cc_command='${cc_command}'" -vcl+backend {
   backend vtc_backend {
       .host = "${s1_addr}"; .port = "${s1_port}";
   }

   include "${basepath}/usr/share/varnish/tests/wikimedia_misc-frontend.vcl";
}

# Attach the "wikimedia_misc" label to wikimedia_misc-frontend.vcl
varnish v1 -cli "vcl.label wikimedia_misc vcl1"

varnish v1 -vcl {
    backend vtc_backend {
        .host = "${s1_addr}"; .port = "${s1_port}";
    }

    include "${basepath}/usr/share/varnish/tests/wikimedia_text-frontend.vcl";
} -start

client c1 {
    txreq -url "/notjson" -hdr "User-Agent: docker/20.10.0+dfsg2" -hdr "Host: docker-registry.wikimedia.org" -hdr "X-Forwarded-Proto: https"
    rxresp
    expect resp.status == 200
    expect resp.http.x-cache ~ "miss"
    expect resp.http.content-length == 2642

    txreq -url "/notjson" -hdr "User-Agent: docker/20.10.0+dfsg2" -hdr "Host: docker-registry.wikimedia.org" -hdr "X-Forwarded-Proto: https"
    rxresp
    expect resp.status == 200
    expect resp.http.x-cache ~ "hit"
    expect resp.http.content-length == 2642

    txreq -url "/json" -hdr "User-Agent: docker/20.10.0+dfsg2" -hdr "Host: docker-registry.wikimedia.org" -hdr "X-Forwarded-Proto: https" -hdr "Accept: application/vnd.docker.distribution.manifest.v2+json"
    rxresp
    expect resp.status == 200
    expect resp.http.x-cache ~ "miss"
    expect resp.http.content-length == 2620

    txreq -url "/json" -hdr "User-Agent: docker/20.10.0+dfsg2" -hdr "Host: docker-registry.wikimedia.org" -hdr "X-Forwarded-Proto: https"
    rxresp
    expect resp.status == 200
    expect resp.http.x-cache ~ "hit"
    expect resp.http.content-length == 2620
} -run
