MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="XXXXboundary text"

This is a multipart config in MIME format.
It contains a cloud-init config followed by
a first boot script.

--XXXXboundary text
MIME-Version: 1.0
Content-Type: text/jinja2; charset="us-ascii"

## template: jinja
#cloud-config

hostname: {{ds.meta_data.name}}
fqdn: {{ds.meta_data.name}}.{{ds.meta_data.project_id}}.<%= @dhcp_domain %>

# APT fails to acquire GPG keys if packages dirmngr or gpg are missing
# If we're booting from a snapshot then puppet is configured to run on first boot.
# We'd rather run it synchronously from here so stop anything that's running already.
bootcmd:
  - [ cloud-init-per, once, dirmngr-aptupdate, apt-get, update ]
  - [ cloud-init-per, once, dirmngr-aptinstall, apt-get, install, "-y", dirmngr ]
  - [ cloud-init-per, once, gnupginstall, apt-get, install, "-y", gnupg ]


# /etc/block-ldap-key-lookup:
#   Prevent non-root logins while the VM is being setup
#   The ssh-key-ldap-lookup script rejects non-root user logins if this file
#   is present.
#
# /etc/rsyslog.d/60-puppet.conf:
#   Enable console logging for puppet
#
# /etc/systemd/system/serial-getty@ttyS0.service.d/override.conf:
#   Enable root console on serial0
#   (cloud-init will create any needed parent dirs)
write_files:
    - content: "VM is work in progress"
      path: /etc/block-ldap-key-lookup
    - content: "daemon.* |/dev/console"
      path: /etc/rsyslog.d/60-puppet.conf
    - content: |
        [Service]
        ExecStart=
        ExecStart=-/sbin/agetty --autologin root --noclear %I $TERM
      path: /etc/systemd/system/serial-getty@ttyS0.service.d/override.conf

# resetting ttys0 so root is logged in
runcmd:
    - [systemctl, enable, serial-getty@ttyS0.service]
    - [systemctl, restart, serial-getty@ttyS0.service]

ssh_pwauth: False

manage_etc_hosts: true


# gpg: needed for apt to function properly
# pciutils: used by puppet to determine is_virtual
packages:
    - gpg
    - pciutils

# Clear default partitioning/mounting behavior so puppet can manage it
disk_setup:

fs_setup:

mounts:

# You'll see that we're setting apt_preserve_sources_list twice here.  That's
#  because there's a bug in cloud-init where it tries to reconcile the
#  two settings and if they're different the stage fails. That means that
#  if one of them is set differently from the default (True) then nothing
#  works.
apt_preserve_sources_list: False
apt:
    preserve_sources_list: False
    sources:
        wikimedia.list:
            source: |
                deb http://apt.wikimedia.org/wikimedia $RELEASE-wikimedia main
                deb-src http://apt.wikimedia.org/wikimedia $RELEASE-wikimedia main
            filename: wikimedia.list
            keyid: 9D392D3FFADF18FB

package_update: true
package_upgrade: true

# This configures puppet and starts the puppet agent (which we don't want).
#  When the boot script starts we'll kill the agent and run puppet synchronously.
puppet:
    conf:
        agent:
            server: 'puppet'
            certname: '%f'


--XXXXboundary text
MIME-Version: 1.0
Content-Type: text/text/x-shellscript; charset="us-ascii"
#!/bin/bash

set -x

# The puppet config from cloud-init may have started the puppet agent.  If so,
#  stop it so we can run it manually in a moment.
systemctl stop puppet.service
killall puppet

systemctl restart nscd.service
dpkg-reconfigure -fnoninteractive -pcritical openssh-server
systemctl restart ssh.service
nscd -i hosts

puppet agent --enable
# Run puppet, twice.  The second time is just to pick up packages
#  that may have been unavailable in apt before the first puppet run
#  updated sources.list
puppet agent --onetime --verbose --no-daemonize --no-splay --show_diff

# Refresh ldap now that puppet has updated our ldap.conf
systemctl restart nslcd.service

# Ensure all NFS mounts are mounted
mount_attempts=1
until [ $mount_attempts -gt 10 ]
do
    echo "Ensuring all NFS mounts are mounted, attempt ${mount_attempts}"
    echo "Ensuring all NFS mounts are mounted, attempt ${mount_attempts}" >> /etc/block-ldap-key-lookup
    ((mount_attempts++))
    /usr/bin/timeout --preserve-status -k 10s 20s /bin/mount -a && break
    # Sleep for 10s before next attempt
    sleep 10
done

# Run puppet again post mounting NFS mounts (if all the mounts hadn't been mounted
# before, the puppet code that ensures the symlinks are created, etc may not
# have run)
puppet agent -t

# Remove the non-root login restriction
rm /etc/block-ldap-key-lookup
--XXXXboundary text
