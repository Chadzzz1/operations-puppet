# This is only used if dfdaemon is configured in registry-mirrors of
# /etc/docker/daemon.json.
# It is not used in our configuration, but I'll keep it here as the default is
# the upstream docker hub and that looks very phishy in logs.
registry_mirror:
  remote: "https://<%= @docker_registry_fqdn %>"

# dfdaemon will listen on TCP 65001 by default for connections to be proxied to the registry
# If certpem and keypem is set, dfdaemon will only accept HTTPS connections.
hostIp: 127.0.0.1
port: 65001
# We can't use HTTP even though we're localhost only as docker will refuse to send credentials
# for a registry via HTTPS. So this needs to be a certificate for: 127.0.0.1, ::1, localhost
certpem: "<%= @dfdaemon_ssl_cert %>"
keypem: "<%= @dfdaemon_ssl_key %>"

# Requests will be handled by the first matching rule
# "use_https: true" can be used to upgrade incoming HTTP requests to HTTPS (this means connections
# from dfdaemon to the source registry will always use HTTPS).
proxies:
<% @proxy_urls_regex.each do |regex| -%>
  - regx: "<%= regex %>"
    use_https: true
<% end -%>

# If an https request's host matches any of the hijacking rules, dfdaemon will
# decrypt the request with given key pair and proxy it with the proxy rules.
hijack_https:
  # Cert and key of docker-registry.discovery.wmnet
  cert: "<%= @dfdaemon_ssl_cert %>"
  key: "<%= @dfdaemon_ssl_key %>"
  hosts:
    - regx: "<%= @docker_registry_fqdn %>"
      # Puppet-ca here, for validation of the cert from source
      certs: ["/etc/ssl/certs/Puppet_Internal_CA.pem"]

# Configure dfget to use a specific home directory (will be created if it does not exist)
# Also set a specific port to listen for peer connections on
dfget_flags: ["--home", "/var/lib/dragonfly-dfdaemon/dfget", "--ip", "0.0.0.0", "--port", "15001"]