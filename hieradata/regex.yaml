es_codfw_rack_a2:
  __regex: !ruby/regexp /^elastic20(37|38)\.codfw\.wmnet$/
  profile::elasticsearch::rack: A2
  profile::elasticsearch::row:  A

es_codfw_rack_a5:
  __regex: !ruby/regexp /^elastic2025\.codfw\.wmnet$/
  profile::elasticsearch::rack: A5
  profile::elasticsearch::row:  A

es_codfw_rack_a7:
  __regex: !ruby/regexp /^elastic20(39|40)\.codfw\.wmnet$/
  profile::elasticsearch::rack: A7
  profile::elasticsearch::row:  A

es_codfw_rack_a8:
  __regex: !ruby/regexp /^elastic20(26|27)\.codfw\.wmnet$/
  profile::elasticsearch::rack: A8
  profile::elasticsearch::row:  A

es_codfw_rack_b2:
  __regex: !ruby/regexp /^elastic20(41|42)\.codfw\.wmnet$/
  profile::elasticsearch::rack: B2
  profile::elasticsearch::row:  B

es_codfw_rack_b5:
  __regex: !ruby/regexp /^elastic2028\.codfw\.wmnet$/
  profile::elasticsearch::rack: B5
  profile::elasticsearch::row:  B

es_codfw_rack_b7:
  __regex: !ruby/regexp /^elastic20(43|44)\.codfw\.wmnet$/
  profile::elasticsearch::rack: B7
  profile::elasticsearch::row:  B

es_codfw_rack_b8:
  __regex: !ruby/regexp /^elastic20(29|30)\.codfw\.wmnet$/
  profile::elasticsearch::rack: B8
  profile::elasticsearch::row:  B

es_codfw_rack_c1:
  __regex: !ruby/regexp /^elastic2031\.codfw\.wmnet$/
  profile::elasticsearch::rack: C1
  profile::elasticsearch::row:  C

es_codfw_rack_c2:
  __regex: !ruby/regexp /^elastic20(45|46|47)\.codfw\.wmnet$/
  profile::elasticsearch::rack: C2
  profile::elasticsearch::row:  C

es_codfw_rack_c5:
  __regex: !ruby/regexp /^elastic20(32|33)\.codfw\.wmnet$/
  profile::elasticsearch::rack: C5
  profile::elasticsearch::row:  C

es_codfw_rack_c7:
  __regex: !ruby/regexp /^elastic20(48|49)\.codfw\.wmnet$/
  profile::elasticsearch::rack: C7
  profile::elasticsearch::row:  C

es_codfw_rack_d1:
  __regex: !ruby/regexp /^elastic2034\.codfw\.wmnet$/
  profile::elasticsearch::rack: D1
  profile::elasticsearch::row:  D

es_codfw_rack_d2:
  __regex: !ruby/regexp /^elastic20(50|51|52)\.codfw\.wmnet$/
  profile::elasticsearch::rack: D2
  profile::elasticsearch::row:  D

es_codfw_rack_d5:
  __regex: !ruby/regexp /^elastic20(35|36)\.codfw\.wmnet$/
  profile::elasticsearch::rack: D5
  profile::elasticsearch::row:  D

es_codfw_rack_d7:
  __regex: !ruby/regexp /^elastic20(53|54)\.codfw\.wmnet$/
  profile::elasticsearch::rack: D7
  profile::elasticsearch::row:  D

es_eqiad_rack_a3:
  __regex: !ruby/regexp /^(elastic10(32|33|34|35|54)|relforge1001)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: A3
  profile::elasticsearch::row:  A

es_eqiad_rack_a5:
  __regex: !ruby/regexp /^elastic1053\.eqiad\.wmnet$/
  profile::elasticsearch::rack: A5
  profile::elasticsearch::row:  A

es_eqiad_rack_a6:
  __regex: !ruby/regexp /^elastic10(44|45|48)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: A6
  profile::elasticsearch::row:  A

es_eqiad_rack_b1:
  __regex: !ruby/regexp /^elastic1055\.eqiad\.wmnet$/
  profile::elasticsearch::rack: B1
  profile::elasticsearch::row:  B

es_eqiad_rack_b3:
  __regex: !ruby/regexp /^elastic10(36|37|38|39)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: B3
  profile::elasticsearch::row:  B

es_eqiad_rack_b4:
  __regex: !ruby/regexp /^elastic10(49|50)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: B4
  profile::elasticsearch::row:  B

es_eqiad_rack_b5:
  __regex: !ruby/regexp /^elastic1056\.eqiad\.wmnet$/
  profile::elasticsearch::rack: B5
  profile::elasticsearch::row:  B

es_eqiad_rack_b6:
  __regex: !ruby/regexp /^elastic10(46|47)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: B6
  profile::elasticsearch::row:  B

es_eqiad_rack_c3:
  __regex: !ruby/regexp /^elastic10(57|58)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: C3
  profile::elasticsearch::row:  C

es_eqiad_rack_c5:
  __regex: !ruby/regexp /^(elastic10(40|41|42|43)|relforge1002)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: C5
  profile::elasticsearch::row:  C

es_eqiad_rack_c7:
  __regex: !ruby/regexp /^elastic10(51|52)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: C7
  profile::elasticsearch::row:  C

es_eqiad_rack_c8:
  __regex: !ruby/regexp /^elastic1059\.eqiad\.wmnet$/
  profile::elasticsearch::rack: C8
  profile::elasticsearch::row:  C

es_eqiad_rack_d1:
  __regex: !ruby/regexp /^elastic10(60|61)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: D1
  profile::elasticsearch::row:  D

es_eqiad_rack_d3:
  __regex: !ruby/regexp /^elastic10(62|63)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: D3
  profile::elasticsearch::row:  D

es_eqiad_rack_d4:
  __regex: !ruby/regexp /^elastic1064\.eqiad\.wmnet$/
  profile::elasticsearch::rack: D4
  profile::elasticsearch::row:  D

es_eqiad_rack_d5:
  __regex: !ruby/regexp /^elastic1065\.eqiad\.wmnet$/
  profile::elasticsearch::rack: D5
  profile::elasticsearch::row:  D

es_eqiad_rack_d6:
  __regex: !ruby/regexp /^elastic10(66|67)\.eqiad\.wmnet$/
  profile::elasticsearch::rack: D6
  profile::elasticsearch::row:  D

# T204361
es_eqiad_500G_disk:
  __regex: !ruby/regexp /^(elastic101[7-9]|elastic1020|elastic102[2-9]|elastic103[0-1])\.eqiad\.wmnet$/
  profile::base::check_disk_options: -w 10% -c 5% -W 6% -K 3% -l -e -A -i "/srv/sd[a-b][1-3]" --exclude-type=tracefs

mysql_eqiad:
  __regex: !ruby/regexp /^(db1[01][0-9][0-9]|dbstore100[3-5]|dbproxy10[01][0-9]|es101[1-9]|pc10(07|08|09|10)|labsdb10[01][0-9]|dbprov100[0-9])\.eqiad\.wmnet$/
  cluster: mysql

mysql_codfw:
  __regex: !ruby/regexp /^(db2[01][0-9][0-9]|es200[1-4]|pc20(07|08|09|10)|es201[1-9]|dbprov200[0-9])\.codfw\.wmnet$/
  cluster: mysql

db_eqiad:
  __regex: !ruby/regexp /^(db1[01][0-9][0-9])\.eqiad\.wmnet$/

dbproxy_eqiad:
  __regex: !ruby/regexp /^(dbproxy10[01][0-9])\.eqiad\.wmnet$/

extstorage_eqiad:
  __regex: !ruby/regexp /^(es101[1-9])\.eqiad\.wmnet$/

labvirt:
  __regex: !ruby/regexp /^labvirt10[0-9][0-9]\.eqiad\.wmnet$/
  cluster: labvirt

labstore:
  __regex: !ruby/regexp /^labstore.*\.wmnet$/
  cluster: labsnfs

labs:
  __regex: !ruby/regexp /^lab((net|mon)100[1-9]\.eqiad\.wmnet|(services|control)100[1-9]\.wikimedia\.org)$/
  cluster: labs

# Current ms-be partitioning scheme, sda/sdb are boot disks T90922 and T189633
swift_be_codfw_sda:
  __regex: !ruby/regexp /^ms-be20(1[6-9]|[2345][0-9])\.codfw\.wmnet$/
  swift_storage_drives: [
        '/dev/sdm', '/dev/sdn', '/dev/sdc', '/dev/sdd',
        '/dev/sde', '/dev/sdf', '/dev/sdg', '/dev/sdh',
        '/dev/sdi', '/dev/sdj', '/dev/sdk', '/dev/sdl'
  # no trailing comma!
  ]
  swift_aux_partitions: ['/dev/sda3', '/dev/sdb3', '/dev/sda4', '/dev/sdb4']

swift_be_eqiad_sda:
  __regex: !ruby/regexp /^ms-be10(1[6-9]|[2345][0-9])\.eqiad\.wmnet$/
  swift_storage_drives: [
        '/dev/sdm', '/dev/sdn', '/dev/sdc', '/dev/sdd',
        '/dev/sde', '/dev/sdf', '/dev/sdg', '/dev/sdh',
        '/dev/sdi', '/dev/sdj', '/dev/sdk', '/dev/sdl'
  # no trailing comma!
  ]
  swift_aux_partitions: ['/dev/sda3', '/dev/sdb3', '/dev/sda4', '/dev/sdb4']

# Legacy hosts with a single object-server per port
# https://phabricator.wikimedia.org/T222366
swift_servers_per_port:
  __regex: !ruby/regexp /^ms-be[12]0([1-4][0-9]|50)\.(codfw|eqiad)\.wmnet$/
  swift::storage::servers_per_port: 0

lvs_codfw_backup:
  __regex: !ruby/regexp /^lvs200[4-5]\.codfw\.wmnet$/
  profile::pybal::primary: false

labtest:
  __regex: !ruby/regexp /^labtest/
  cluster: labtest
  # no Icinga SMS for test machines
  do_paging: false
  labsldapconfig:
    hostname: cloudservices2002-dev.wikimedia.org
  mariadb::monitor_process::is_critical: false
  mariadb::monitor_disk::is_critical: false

# require WriteBack policy to all hosts (independent of the role) that look
# like databases. Currently this only works for megacli systems, but it will
# be applied to HP RAIDs when available. Systems where this is not currently
# compatible are ignored and do not send any alert.
db_like_raid_policy:
  __regex: !ruby/regexp /^(db|dbstore|es|pc|labsdb)[12]\d\d\d\.(eqiad|codfw)\.wmnet$/
  profile::base::check_raid_policy: 'WriteBack'

# disable screen monitoring, fallback for servers not covered by roles (T165348)
db_without_role:
  __regex: !ruby/regexp /^(db|dbstore|es|pc|labsdb)[12]\d\d\d\.(eqiad|codfw)\.wmnet$/
  monitor_screens: false

# Disable screen/tmux monitoring for:
#  * stat boxes, since researchers/analysts are often doing long running
#    data crunching sessions.
#  * notebook boxes, since researchers/analysts are often doing long running
#    sessions with Jupyter notebooks.
analytics_no_monitor_screens:
  __regex: !ruby/regexp /^(stat1|notebook1)\d\d\d\.eqiad\.wmnet$/
  monitor_screens: false

# Old hosts with mpt controllers and to be decom'd
# smartmontools broken out of the box - T179078 and T86552
smart_health_mpt:
  __regex: !ruby/regexp /^labnet1002.*/
  profile::base::check_smart: false

puppetmaster_labtest:
  __regex: !ruby/regexp /^labtestpuppetmaster2001.wikimedia.org$/
  profile::base::puppet::facter_major_version: 2
  profile::base::puppet::puppet_major_version: 4

mediawiki_test_environment:
  __regex: !ruby/regexp /^mwdebug(1[0-9]+\.eqiad|2[0-9]+\.codfw)\.wmnet$/
  profile::base::environment: mediawiki_test
  profile::mediawiki::apc_shm_size: 128M
  profile::mediawiki::php::fpm_config:
    opcache.interned_strings_buffer: 50
    opcache.memory_consumption: 300
  profile::mediawiki::php::restarts::opcache_limit: 100
  profile::mediawiki::php::enable_request_profiling: true
