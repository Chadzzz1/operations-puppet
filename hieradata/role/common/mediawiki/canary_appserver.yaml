cluster: appserver
admin::groups:
  - deployment
  - perf-roots
  - mediawiki-testers
nutcracker::verbosity: "4"
profile::mediawiki::php::enable_fpm: true
#profile::php_fpm::fcgi_port: 8000
# Bump the connections per backend to 5 in mcrouter, see T203786
profile::mediawiki::mcrouter_wancache::num_proxies: 5
has_lvs: true
profile::mediawiki::webserver::has_tls: true
profile::mediawiki::webserver::tls_keepalive_requests: 200
profile::mediawiki::httpd::logrotate_retention: 12

profile::lvs::realserver::pools:
  apaches:
    services:
      - php7.2-fpm
      - apache2
      - mcrouter
      - nutcracker
  appservers-https:
    services:
      - php7.2-fpm
      - apache2
      - mcrouter
      - nutcracker
      - nginx
profile::mediawiki::php::php_version: "7.2"
# bail out in case a long-lasting C function is called and
# excimer can't throw its exception
profile::mediawiki::php::request_timeout: 201
profile::tlsproxy::instance::bootstrap_protection: true
profile::mediawiki::php::fpm_workers_multiplier: 2.0
profile::mediawiki::apc_shm_size: 6096M
profile::mediawiki::php::fpm_config:
  opcache.interned_strings_buffer: 96
  opcache.memory_consumption: 1024

# Configure php-fpm restarts
profile::mediawiki::php::restarts::ensure: present
# We set the restart watermark at 200 MB, which is approximately how much
# opcache one full day of deployments consume.
profile::mediawiki::php::restarts::opcache_limit: 200
# Have more php workers. This might not help the peak performance but will give us room
# for being more resilient
profile::mediawiki::php::fpm_workers_multiplier: 4.5
# Register stack traces for any request taking more than 5 seconds
profile::mediawiki::php::slowlog_limit: 5
