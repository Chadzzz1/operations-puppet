role::logstash::apifeatureusage::elastic_hosts:
  - search.svc.codfw.wmnet
  - search.svc.eqiad.wmnet
cluster: logstash
admin::groups:
  - logstash-roots
  - elasticsearch-roots

# ES-specific
# NOTE: cluster_name must be kept in sync with the backend
# node config in hieradata/role/common/logstash/elasticsearch.yaml
profile::elasticsearch::rack: ''
profile::elasticsearch::row: ''
profile::elasticsearch::ferm_srange: ''
profile::elasticsearch::instances: {}
profile::elasticsearch::dc_settings: {}
profile::elasticsearch::base_data_dir: '/srv/elasticsearch'
profile::elasticsearch::version: '5.6'
profile::elasticsearch::common_settings:
    awareness_attributes: ''
    auto_create_index: true
    short_cluster_name: omega
    expected_nodes: 6
    heap_memory: '4G'
    # The ES nodes that are run on the same box as Logstash+Kibana are only used
    # as client nodes to communicate with the backing cluster.
    holds_data: false
    minimum_master_nodes: 2
    recover_after_nodes: 2
    recover_after_time: '1m'

    send_logs_to_logstash: false
    curator_uses_unicast_hosts: false
    http_port: 9200
    transport_tcp_port: 9300

# Logstash specific
logstash::heap_memory: 1g

role::logstash::collector::statsd_host: statsd.eqiad.wmnet

# Kibana
role::kibana::vhost: logstash.wikimedia.org
role::kibana::serveradmin: noc@wikimedia.org
role::kibana::auth_type: ldap
role::kibana::auth_realm: Developer account (use wiki login name not shell) - nda/ops/wmf
# ldap-labs is the ldap we authenticate against even production services e.g. grafana or icinga.
role::kibana::ldap_authurl: ldaps://ldap-labs.eqiad.wikimedia.org ldap-labs.codfw.wikimedia.org/ou=people,dc=wikimedia,dc=org?cn
role::kibana::ldap_binddn: cn=proxyagent,ou=profile,dc=wikimedia,dc=org
role::kibana::ldap_groups:
  - cn=ops,ou=groups,dc=wikimedia,dc=org
  - cn=nda,ou=groups,dc=wikimedia,dc=org
  - cn=wmf,ou=groups,dc=wikimedia,dc=org
diamond::remove: true

profile::prometheus::statsd_exporter::mappings:
  # In some instances, e.g. mediawiki, the sender and channel are concatenated with a dot separator.  Level is the last field.
  - match: '^logstash\.rate\.(.*)\.(.*)$'
    name: logstash_count
    match_type: regex
    labels:
      sender: "$1"
      level: "$2"

# these checks should not be here - T218691
profile::elasticsearch::monitor::shard_size_warning: 150
profile::elasticsearch::monitor::shard_size_critical: 200

# the logstash cluster has 3 data nodes, and each shard has 3 replica (each
# shard is present on each node). If one node is lost, 1/3 of the shards
# will be unassigned, with no way to reallocate them on another node, which
# is fine and should not raise an alert. So threshold needs to be > 1/3.
profile::elasticsearch::monitor::threshold: '>=0.34'
