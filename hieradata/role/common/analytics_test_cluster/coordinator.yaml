nagios_group: analytics_eqiad
cluster: analytics
profile::standard::admin_groups:
  - analytics-admins

# Testing Apache BigTop in T244499
profile::cdh::apt::bigtop_component: 'bigtop15'
profile::analytics::cluster::packages::common::use_bigtop_settings: true

profile::hadoop::common::hadoop_cluster_name: 'analytics-test-hadoop'

profile::hive::client::hive_service_name: 'analytics-test-hive'
profile::hive::client::deploy_jdbc_settings: true
profile::hive::client::hive_metastore_host: 'an-test-coord1001.eqiad.wmnet'

profile::oozie::client::oozie_service: 'analytics-test-oozie'

# Set the hive-site.xml file with group ownership 'analytics' so systemd timers
# can read the file.
profile::hive::client::config_files_group_ownership: 'analytics'

profile::analytics::cluster::hdfs_mount::monitoring_user: 'analytics'

# Hive Server Settings
profile::hive::server::ferm_srange: '$ANALYTICS_NETWORKS'
profile::hive::metastore::ferm_srange: '$ANALYTICS_NETWORKS'

# Presto Server settings
profile::presto::monitoring_enabled: true
profile::presto::cluster_name: analytics-test-presto
profile::presto::discovery_uri: https://an-test-coord1001.eqiad.wmnet:8281
profile::presto::server::heap_max: 4G

profile::presto::server::use_puppet_ssl_certs: true
profile::presto::server::config_properties:
  coordinator: true
  # since we only run presto as a single node on the coordinator
  # on the test cluster, set this to allow the coordinator to
  # also handle queries.
  node-scheduler.include-coordinator: true
  discovery-server.enabled: true
  # Set network-topology to legacy since we are not (yet?) running
  # presto co-located with HDFS nodes. If we were, we would
  # set this to 'flat'.
  node-scheduler.network-topology: legacy
  query.max-memory: 2GB
  query.max-memory-per-node: 2GB
  query.max-total-memory-per-node: 2GB
  http-server.authentication.type: 'KERBEROS'
  http.server.authentication.krb5.service-name: 'presto'
  http.server.authentication.krb5.keytab: '/etc/security/keytabs/presto/presto.keytab'
  http.authentication.krb5.config: '/etc/krb5.conf'

profile::presto::server::catalogs:
  # Each catalog hash should contain a single properties has that will
  # end up being passed to the presto::properties define.  This will render
  # a properties file at /etc/presto/catalog/$name.properties.
  analytics_test_hive:
    properties:
      connector.name: hive-hadoop2
      hive.security: read-only
      # Add Hadoop config files so Hive connector can work with HA Hadoop NameNodes.
      hive.config.resources: /etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml
      hive.metastore.uri: thrift://analytics-test-hive.eqiad.wmnet:9083
      hive.metastore.username: presto
      hive.storage-format: PARQUET
      hive.compression-codec: SNAPPY
      # We do not (yet) colocate workers with Hadoop DataNodes.
      hive.force-local-scheduling: false
      # Allow presto-cli to impersonate the user running the process
      hive.hdfs.impersonation.enabled: true
      # TODO: do we want to disable non managed tables?
      hive.non-managed-table-writes-enabled: true
      hive.non-managed-table-creates-enabled: true
      hive.metastore.authentication.type: 'KERBEROS'
      hive.metastore.service.principal: 'hive/analytics-test-hive.eqiad.wmnet@WIKIMEDIA'
      hive.metastore.client.principal: 'presto/analytics-test-hive.eqiad.wmnet@WIKIMEDIA'
      hive.metastore.client.keytab: '/etc/security/keytabs/presto/presto.keytab'
      hive.hdfs.authentication.type: 'KERBEROS'
      hive.hdfs.impersonation.enabled: true
      hive.hdfs.presto.principal: 'presto/an-test-coord1001.eqiad.wmnet@WIKIMEDIA'
      hive.hdfs.presto.keytab: '/etc/security/keytabs/presto/presto.keytab'
      hive.hdfs.wire-encryption.enabled: true
profile::presto::server::ferm_srange: $ANALYTICS_NETWORKS
profile::presto::use_kerberos: true

profile::analytics::database::meta::monitoring_enabled: true
profile::analytics::database::meta::ferm_srange: '(($DRUID_PUBLIC_HOSTS $ANALYTICS_NETWORKS))'
profile::analytics::database::meta::datadir: '/srv/mysql'
profile::analytics::refinery::job::data_purge::public_druid_host: 'an-test-druid1001.eqiad.wmnet'
profile::oozie::server::monitoring_enabled: true
profile::oozie::server::ferm_srange: '$ANALYTICS_NETWORKS'
profile::oozie::server::use_admins_list: true
profile::oozie::server::admin_users: []
profile::oozie::server::admin_groups: ['analytics-admins', 'ops']
profile::oozie::server::jvm_opts: '-Xms2g -Xmx2g'

# Build and install oozie sharelib for our custom spark2 package.
profile::hadoop::spark2::install_oozie_sharelib: true
profile::oozie::server::oozie_sharelib_archive: '/usr/lib/oozie/oozie-sharelib.tar.gz'

# Upload the spark2-assembly.zip file to HDFS
profile::hadoop::spark2::install_assembly: true

profile::analytics::refinery::job::camus::monitoring_enabled: true

# Http proxy to get project-namespace infos from API using python
profile::analytics::refinery::job::project_namespace_map::http_proxy: 'http://webproxy.eqiad.wmnet:8080'

# Kerberos config
profile::kerberos::keytabs::keytabs_metadata:
  - role: 'hive'
    owner: 'hive'
    group: 'hive'
    filename: 'hive.keytab'
  - role: 'oozie'
    owner: 'oozie'
    group: 'oozie'
    filename: 'HTTP-oozie.keytab'
  - role: 'analytics'
    owner: 'analytics'
    group: 'analytics'
    filename: 'analytics.keytab'
  - role: 'presto'
    owner: 'presto'
    group: 'presto'
    filename: 'presto.keytab'
  - role: 'hadoop'
    owner: 'hdfs'
    group: 'hdfs'
    filename: 'hdfs.keytab'
    parent_dir_grp: 'hadoop'

profile::oozie::server::oozie_service_kerberos_enabled: true
profile::oozie::server::local_realm: 'ANALYTICS.EQIAD.WMFLABS'
profile::oozie::server::oozie_service_keytab_file: '/etc/security/keytabs/oozie/HTTP-oozie.keytab'
profile::oozie::server::oozie_service_kerberos_principal: 'oozie/_HOST@WIKIMEDIA'
profile::oozie::server::oozie_authentication_type: 'kerberos'
profile::oozie::server::oozie_authentication_kerberos_principal: 'HTTP/_HOST@WIKIMEDIA'
profile::oozie::server::spark_defaults_config_dir: '/etc/spark2/conf'

profile::base::notifications: disabled

profile::java::java_packages:
  - version: '8'
    variant: 'jdk'
profile::java::extra_args: 'JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"'
profile::java::trust_puppet_ca: true

profile::base::debdeploy::exclude_mounts:
  - /mnt/hdfs

profile::hadoop::common::use_puppet_ssl_certs: true
