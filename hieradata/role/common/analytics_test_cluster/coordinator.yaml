nagios_group: analytics_eqiad
cluster: analytics
admin::groups:
  - analytics-admins

profile::hadoop::common::hadoop_cluster_name: 'analytics-test-hadoop'

# Periodical backups of the analytics-meta mysql database.
profile::analytics::database::meta::backup::rsync_dest: 'analytics1029.eqiad.wmnet::backup/mysql/analytics-meta'

profile::oozie::client::oozie_host: 'analytics1030.eqiad.wmnet'

# Set the hive-site.xml file with group ownership 'analytics' so systemd timers
# can read the file.
profile::hive::client::config_files_group_ownership: 'analytics'

# Hive Client settings.
# Hive configuration is common to multiple clients, but because of role based
# hiera lookups, we need to repeat it in multiple places. If you change this,
# make sure you change it in all the right places!
profile::hive::client::zookeeper_cluster_name: main-eqiad
profile::hive::client::server_host: analytics1030.eqiad.wmnet
profile::hive::client::server_port: 10000
profile::hive::client::metastore_host: 'analytics1030.eqiad.wmnet'

# Hive Server Settings
profile::hive::server::ferm_srange: '$ANALYTICS_NETWORKS'
profile::hive::metastore::ferm_srange: '$ANALYTICS_NETWORKS'

profile::analytics::database::meta::monitoring_enabled: true
profile::analytics::database::meta::ferm_srange: '(($DRUID_PUBLIC_HOSTS $ANALYTICS_NETWORKS))'
profile::analytics::refinery::job::data_purge::public_druid_host: 'analytics1041.eqiad.wmnet'
profile::oozie::server::monitoring_enabled: true
profile::oozie::server::ferm_srange: '$ANALYTICS_NETWORKS'

# Following Cloudera recommandations for ~20 users
profile::hive::client::hive_metastore_opts: '-Xms4g -Xmx10g -Xms4g -Xmx10g -javaagent:/usr/share/java/prometheus/jmx_prometheus_javaagent.jar=%{::ipaddress}:9183:/etc/prometheus/hive_metastore_jmx_exporter.yaml'
profile::hive::client::hive_server_opts: '-Xms4g -Xmx6g -javaagent:/usr/share/java/prometheus/jmx_prometheus_javaagent.jar=%{::ipaddress}:10100:/etc/prometheus/hive_server_jmx_exporter.yaml'
profile::oozie::server::jvm_opts: '-Xms2g -Xmx2g'

# Build and install oozie sharelib for our custom spark2 package.
profile::hadoop::spark2::install_oozie_sharelib: true

# Upload the spark2-assembly.zip file to HDFS
profile::hadoop::spark2::install_assembly: true

profile::analytics::refinery::job::camus::monitoring_enabled: true

# Http proxy to get project-namespace infos from API using python
profile::analytics::refinery::job::project_namespace_map::http_proxy: 'http://webproxy.eqiad.wmnet:8080'

# Kerberos config
profile::kerberos::keytabs::keytabs_metadata:
  - role: 'hive'
    owner: 'hive'
    group: 'hive'
    filename: 'hive.keytab'
  - role: 'oozie'
    owner: 'oozie'
    group: 'oozie'
    filename: 'HTTP-oozie.keytab'
  - role: 'analytics'
    owner: 'analytics'
    group: 'analytics'
    filename: 'analytics.keytab'

profile::analytics::cluster::client::kerberos_enabled: true
profile::hadoop::balancer::use_kerberos: true
profile::oozie::server::use_kerberos: true
profile::hive::server::use_kerberos: true
profile::hadoop::spark2::use_kerberos: true
profile::analytics::refinery::job::camus::use_kerberos: true
profile::hive::client::hive_metastore_sasl_enabled: true
profile::hive::client::hive_metastore_kerberos_keytab_file: '/etc/security/keytabs/hive/hive.keytab'
profile::hive::client::hive_metastore_kerberos_principal: 'hive/_HOST@WIKIMEDIA'
profile::hive::client::hive_server2_authentication: 'KERBEROS'
profile::hive::client::hive_server2_authentication_kerberos_principal: 'hive/_HOST@WIKIMEDIA'
profile::hive::client::hive_server2_authentication_kerberos_keytab: '/etc/security/keytabs/hive/hive.keytab'
profile::oozie::server::oozie_service_kerberos_enabled: true
profile::oozie::server::local_realm: 'ANALYTICS.EQIAD.WMFLABS'
profile::oozie::server::oozie_service_keytab_file: '/etc/security/keytabs/oozie/HTTP-oozie.keytab'
profile::oozie::server::oozie_service_kerberos_principal: 'oozie/_HOST@WIKIMEDIA'
profile::oozie::server::oozie_authentication_type: 'kerberos'
profile::oozie::server::oozie_authentication_kerberos_principal: 'HTTP/_HOST@WIKIMEDIA'

profile::hadoop::spark2::extra_settings:
  spark.authenticate: true
  spark.network.crypto.enabled: true
  spark.network.crypto.keyLength: 128
  spark.network.crypto.keyFactoryAlgorithm: PBKDF2WithHmacSHA1
  spark.authenticate.enableSaslEncryption: true
  spark.network.sasl.serverAlwaysEncrypt: true
  spark.io.encryption.enabled: true
  spark.io.encryption.keySizeBits: 128
  spark.io.encryption.keygen.algorithm: HmacSHA1

diamond::remove: true

profile::base::notifications: disabled
